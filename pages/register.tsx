/* eslint-disable react-hooks/rules-of-hooks */
import React,{useState} from 'react';
import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import { useDispatch } from 'react-redux';
import { login } from '.././components/features/UserSlice'
import regis_style from '../styles/register.module.css'
import { createUserWithEmailAndPassword } from 'firebase/auth';
import { addDoc, collection, serverTimestamp, updateDoc, doc } from 'firebase/firestore'; 
import { db, storage } from '../firebase';
import { auth } from '../firebase';
import Link from 'next/link';
import { loadStripe } from '@stripe/stripe-js';
import axios from 'axios';
function register() {
    const [email, setEmail] = useState("")
    const [password, setPassword] = useState("")
    const [name, setName] = useState("");
    const [phone, setPhone] = useState("");
    const [bname, setBName] = useState("");
    const [address, setAddress] = useState("")
    const [btype, setBtype] = useState("")
    const [bankac, setBankac] = useState("")
    const [industry, setIndustry] = useState("")
    const [bweb, setBweb] = useState("")
    const [uids, setUids] = useState("")
    const [hasError, Error] = useState("");
    const [select,setSelect]= React.useState();
    const dispatch = useDispatch();
    const stripePromise = loadStripe(process.env.stripe_public_key)
    const router = useRouter()
    const handleCapacity=(e)=>{
        setSelect(e.target.value);
       
    }
      const registers = async() => {

          createUserWithEmailAndPassword(auth,email,password).then((userAuth) => {
              setUids(userAuth.user.uid)
              localStorage.setItem('email', email);
              localStorage.setItem('accid', accId);
               localStorage.setItem('displayName', name);
          }).catch(function(error) {
            var errorMessage = error.message;
            console.log("errorMessage: "+ errorMessage)
          });
        
          const stripe = await stripePromise;
          const RegisterSession =
           await axios.post('/api/connectedaccount',
              {
                
                  email: email,
              
              })
              const accId= RegisterSession.data.id
                console.log("accId: "+ accId)
                const link=RegisterSession.data.link
                console.log("link: "+ link)
            
    if(select==='user'|| accId!=null){
            const docRef = await addDoc(collection(db, 'userid'), {
                email:email,
                password:password,
                name:name,
                phone:phone,
                select:select,
                bname:bname,
              accId:accId,
              object: "bank_account",
            country: "US",
            currency: "usd",
            routing_number: "110000000",
            account_number: "000123456789",
            address:address   
              })
            
    
              router.push(select==='user' ? '/' : link)
            }
       
        // router.push(select==='user' ? '/' : '/ResturentOwner')
      
      }
  return(
      <>
        <Head>
            <title>Food Port</title>
            <meta name="description" content="Generated by create next app" />
         <link rel="icon" href="/icon-06.png" /> 
            <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" />
            <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css" rel="stylesheet" />
        </Head>


        <main>
        {/* style="background-image: url(./img/Banner-7.jpg);" */}
        <div className={regis_style.form_img}>

            <div className={`${regis_style.main_from} ${regis_style.form}`}>
            <div className={regis_style.upper_div}></div>    
            </div>

            
            <section>
                <span className={regis_style.center_img}><Link href="/"><img src="/img/logologo.f87723ea.png" alt="" className='logo'/></Link></span>
                {/* className="row justify-content-center" */}
                <div  className={`${regis_style.form_row} ${regis_style.form_secd}`}>
    
                <div className="col-lg-10">
                    <h3 className="text-center">Registration</h3>
                    <div className={`${regis_style.icons_group} ${regis_style.icons_groups}`}>
                        <img src="/img/signin.png" alt=""  className='logo'/>
                        <input type="text" className="form-control" value={name} onChange={(e) => setName(e.target.value)} placeholder="Enter Your Name" />
                    </div>
                    <div className={`${regis_style.icons_group} ${regis_style.icons_groups}`}>
                        <img src="/img/phone.png" alt="" />
                        <input type="text" className="form-control" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder="Enter Your Phone" />
                    </div>
                    <div className={`${regis_style.icons_group} ${regis_style.icons_groups}`}>
                        <img src="/img/email.png" alt="" />
                        <input type="text" className="form-control" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Enter Your Email" />
                    </div>
                    <div className={`${regis_style.icons_group} ${regis_style.icons_groups}`}>
                        <img src="/img/password.png" alt="" />
                        <input type="text" className="form-control" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="Enter Your Password" />
                    </div>
                    <select name="UserType" id={regis_style.usertype} onChange={handleCapacity}>
                        <option>User Type</option>
                        <option value="user"> User</option>
                        <option value="business"> Business</option>
                    </select>
                    {
                    (select==="business") && (

                        <div>
                        <input type="text" value={bname} className="form-control" placeholder="Buisness Name" onChange={(e) => setBName(e.target.value)}/>
                        {/* <input type="text" value={btype} className="form-control" placeholder="Buisness Type" onChange={(e) => setBtype(e.target.value)}/>
                        <input type="text" value={bankac} className="form-control" placeholder="Buisness Account" onChange={(e) => setBankac(e.target.value)}/>
                        <input type="text" value={industry} className="form-control" placeholder="Buisness Address" onChange={(e) => setIndustry(e.target.value)}/>
                        <input type="text" value={bweb} className="form-control" placeholder="Buisness Address" onChange={(e) => setBweb(e.target.value)}/> */}
                        </div>
                        )
                    
                      }
                        {select==="user"&& 
                       <input type="text" value={address} className="form-control" placeholder="Address" onChange={(e) => setAddress(e.target.value)}/>}
                    <br />
                   <input type="radio" name="radio" value="user" onChange={handleCapacity}/>I accept Terms of condition
                    <br />
                    
                    <button className={regis_style.form_btns} onClick={registers}>REGISTER</button> 
                </div>

                </div>
                </section>
        </div>
        </main>

      </>
  );
}

export default register;


